syntax = "proto2";

// buf:lint:ignore:PACKAGE_DIRECTORY_MATCH
// buf:lint:ignore PACKAGE_VERSION_SUFFIX
package galaxy.v1.bidon;

import "com/iabtechlab/adcom/v1/adcom.proto";
import "com/iabtechlab/openrtb/v3/request.proto";

option java_package = "io.bidmachine.galaxy.openrtb";
option java_multiple_files = true;


message BidonApp {
  optional string key = 1;
  optional string framework = 2;
  optional string framework_version = 3;
  optional string plugin_version = 4;
  optional string sdk_version = 5;
  repeated string skadn = 6;
  optional string bidon_version = 7; // set from http header
}

// Extend AdCOM 1.0 Context objects if necessary
extend com.iabtechlab.adcom.v1.context.DistributionChannel.App {
  optional BidonApp bidon_app = 501;
}

message Segment {
  optional string id = 1;
  optional string uid = 2;
  optional string ext = 3;
}

message BidonUser {
  optional string idfa = 1;
  optional string tracking_authorization_status = 2;
  optional string idfv = 3;
  optional string idg = 4;
  optional string consent = 5;

  repeated Segment segments = 6;
}

// Extend AdCOM 1.0 User object
extend com.iabtechlab.adcom.v1.context.User {
  optional BidonUser bidon = 501;
}

message BidonRegs {
  optional string us_privacy = 2;
  optional string eu_privacy = 3;
  optional string iab = 4;
}

// Extend AdCOM 1.0 Regs object
extend com.iabtechlab.adcom.v1.context.Regs {
  optional BidonRegs bidon_regs = 501;
}

message BidonSession {
  // Unique identifier for the session
  optional string id = 1;
  //  Timestamp of the session launch
  optional int32 launch_ts = 2;
  //  Monotonic timestamp of the session launch
  optional int32 launch_monotonic_ts = 3;
  //  Timestamp of the session start
  optional int32 start_ts = 4;
  //  Monotonic timestamp of the session start
  optional int32 start_monotonic_ts = 5;
  //  Current timestamp of the session
  optional int32 ts = 6;
  //  Current monotonic timestamp of the session
  optional int32 monotonic_ts = 7;
  //  Timestamps when memory warnings occurred
  repeated int32 memory_warnings_ts = 8;
  //  Monotonic timestamps when memory warnings occurred
  repeated int32 memory_warnings_monotonic_ts = 9;
  //  Amount of RAM used
  optional int32 ram_used = 10;
  //  Total size of RAM
  optional int32 ram_size = 11;
  //  Free storage space available
  optional int32 storage_free = 12;
  //  Used storage space
  optional int32 storage_used = 13;
  //  Battery level percentage
  optional double battery = 14;
  //  CPU usage percentage
  optional double cpu_usage = 15;
}

extend com.iabtechlab.openrtb.v3.Request {
  optional BidonSession bidon_session = 501;
}

message BidonAdObject {
  optional string auction_id = 1;
  optional string auction_key = 2;
  optional int64 auction_configuration_id = 3;
  optional string auction_configuration_uid = 4;
  optional Orientation orientation = 5;
  map<string, Demand> demands = 6;
  optional BannerAd banner = 7;
  optional string interstitial = 8;
  optional string rewarded = 9;
}

// buf:lint:ignore ENUM_VALUE_PREFIX
enum Orientation {
  ORIENTATION_UNSPECIFIED = 0;
  PORTRAIT = 1;
  LANDSCAPE = 2;
}

message Demand {
  optional string token = 1;
  optional string status = 2;
  optional int64 token_finish_ts = 3;
  optional int64 token_start_ts = 4;
}

message BannerAd {
  optional AdFormat format = 1;
}

// buf:lint:ignore ENUM_VALUE_PREFIX
enum AdFormat {
  FORMAT_UNSPECIFIED = 0;
  BANNER = 1;
  LEADERBOARD = 2;
  MREC = 3;
  ADAPTIVE = 4;
}

message AdapterEntry {
  optional string key = 1; // Adapter name (e.g., "property1", "property2")
  optional Adapter value = 2;
}

message Adapter {
  optional string version = 1;
  optional string sdk_version = 2;
}

extend com.iabtechlab.openrtb.v3.Item {
  optional BidonAdObject bidon_ad_object = 501;
}
